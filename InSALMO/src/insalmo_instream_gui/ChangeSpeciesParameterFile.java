/*
 * InSALMO/InSTREAM Graphic User Interface, last revised October 2011.
 * Developed and maintained by Steve Railsback, Lang, Railsback & Associates,
 * Steve@LangRailsback.com and Colin Sheppard, critter@stanfordalumni.org.
 * Development sponsored by US Bureau of Reclamation under the
 * Central Valley Project Improvement Act, EPRI, USEPA, USFWS,
 * USDA Forest Service, and others.
 * Copyright (C) 2011 Lang, Railsback & Associates.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program (see file LICENSE); if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 * */
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * newProjectWizard2.java
 *
 * Created on Jan 4, 2010, 2:57:50 PM
 */

package insalmo_instream_gui;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
import javax.swing.table.TableModel;


/**
 *
 * @author critter
 */
public class ChangeSpeciesParameterFile extends javax.swing.JFrame {
	InsalmoInstreamView parent;
	Project openProject;
	String speciesName;
	Integer speciesIndex;
	File newParameterFile = null;

	private JButton submitButton = new JButton();
	private JButton cancelButton = new JButton();
	private JButton chooseFileButton = new JButton();
	private JLabel chooseFileLabel = new JLabel();
	private JLabel changeParameterTitle = new JLabel();
//	private JLabel projectNewMethodLabel = new JLabel();

	/** Creates new form newProjectWizard2 */
	public ChangeSpeciesParameterFile(InsalmoInstreamView parent, Project openProject, Integer speciesIndex) {
		this.parent = parent;
		this.openProject = openProject;
		this.speciesIndex = speciesIndex;
		this.speciesName = openProject.getFish().get(speciesIndex);
		initComponents();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	private void initComponents() {
		org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(insalmo_instream_gui.InsalmoInstreamApp.class).getContext().getResourceMap(ChangeSpeciesParameterFile.class);

		//NEW NAME TEXT FIELD
		changeParameterTitle.setFont(resourceMap.getFont("changeParameterTitle.font")); 
		changeParameterTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		changeParameterTitle.setText(resourceMap.getString("changeParameterTitle.text") + speciesName); 
		changeParameterTitle.setVerticalAlignment(javax.swing.SwingConstants.TOP);
		changeParameterTitle.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
		changeParameterTitle.setName("changeParameterTitle"); 
		
		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setName("Form"); 

		// CHOOSE NEW PROJECT DIR
		chooseFileButton.setName("chooseFileButton");
		chooseFileButton.setText(resourceMap.getString("chooseFileButton.text"));
		chooseFileButton.setVisible(true);
		chooseFileButton.addActionListener(new java.awt.event.ActionListener(){
			public void actionPerformed(java.awt.event.ActionEvent evt){
				chooserActionPerformed(evt,true);
			}
		});
		chooseFileLabel.setName("chooseFileLabel");
		if(speciesName == null || !this.openProject.getFish().contains(speciesName)){
			chooseFileLabel.setText("<html><body><b>Current Parameter Filename:</b> <i>not yet specified<i></body></html>");
		}else{
			chooseFileLabel.setText("<html><body><b>Current Parameter Filename:</b> <i>"+this.openProject.getSetupParameters("speParam-"+speciesName).getFileName()+"<i></body></html>");
		}

		// SUBMIT AND CANCEL
		submitButton.setName("submitButton");
		submitButton.setText(resourceMap.getString("submitButton.text"));
		submitButton.setVisible(true);
		submitButton.addActionListener(new java.awt.event.ActionListener(){
			public void actionPerformed(java.awt.event.ActionEvent evt){
				submitButtonActionPerformed(evt);
			}
		});
		cancelButton.setName("cancelButton");
		cancelButton.setText(resourceMap.getString("cancelButton.text"));
		cancelButton.setVisible(true);
		cancelButton.addActionListener(new java.awt.event.ActionListener(){
			public void actionPerformed(java.awt.event.ActionEvent evt){
				cancelButtonActionPerformed(evt);
			}
		});
		
		javax.swing.GroupLayout changeParameterLayout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(changeParameterLayout);
		changeParameterLayout.setHorizontalGroup(
				changeParameterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(changeParameterLayout.createSequentialGroup()
						.addContainerGap()
						.addGroup(changeParameterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(changeParameterTitle)
								.addGroup(changeParameterLayout.createSequentialGroup()
									.addComponent(chooseFileButton)
									.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									.addComponent(chooseFileLabel))
								.addGroup(changeParameterLayout.createSequentialGroup()
									.addComponent(submitButton)
									.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
									.addComponent(cancelButton)))
								.addContainerGap())
		);
		changeParameterLayout.setVerticalGroup(
				changeParameterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(changeParameterLayout.createSequentialGroup()
						.addContainerGap()
						.addComponent(changeParameterTitle)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(changeParameterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
							.addComponent(chooseFileButton)
							.addComponent(chooseFileLabel))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(changeParameterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
								.addComponent(submitButton)
								.addComponent(cancelButton)))
		);

		pack();
	}

	private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {
		this.dispose();
	}
	private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {
		if(newParameterFile==null){
			JOptionPane.showMessageDialog(this, "Please choose a new parameter file for this species.");
			return;
		}
		try {
			this.openProject.changeSpeciesParameterFile(speciesName, newParameterFile);
		} catch (Exception e) {
			JOptionPane.showMessageDialog(this,"<html><body><font size=+2><b>Change Parameter File Operation Cancelled</b></font><br/><br/>An error occurred reading the parameter file:<br/><br/><font color='red'> "+e.getMessage()+"</font></body></html>");
			return;
		}
		TableModel model = this.parent.speciesParamTable.get(speciesIndex).getModel();
		for(Parameter param : this.openProject.getSetupParameters("speParam-"+speciesName).getParameterCollection()){
			ParameterTable.getInstance().replaceParameter(model,param);
		}
		this.parent.speciesParamFileLabel.get(speciesIndex).setText("Parameter File: "+newParameterFile.getName());
		this.parent.speciesSetupFileLabel.get(speciesIndex).setText("<html>Filename: Species.Setup<br>Parameter File: "+
			newParameterFile.getName()+"</html>");
		this.dispose();
	}

	private void chooserActionPerformed(java.awt.event.ActionEvent evt,boolean isNew){
		final JFileChooser fc = new JFileChooser();
		fc.setCurrentDirectory(new java.io.File(this.openProject.getProjectDirectory().getAbsolutePath()));
		fc.setDialogTitle("Select a new Species Parameter File");
		fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
		int returnVal = fc.showOpenDialog(this.parent);
		if (returnVal == JFileChooser.APPROVE_OPTION) {
			newParameterFile = fc.getSelectedFile();
		}
		chooseFileLabel.setText("<html><body><b>New Parameter Filename:</b> <i>"+newParameterFile.getName()+"</i></body></html>");
	}

}
